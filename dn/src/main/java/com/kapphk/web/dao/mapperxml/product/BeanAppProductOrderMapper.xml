<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kapphk.web.dao.mapper.product.BeanAppProductOrderMapper" >
    <resultMap id="BaseResultMap" type="com.kapphk.web.bean.product.BeanAppProductOrder" >
        <!--  自动生成 2016年12月19日 表与实体类字段对应 -->
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="product_id" property="productId" jdbcType="BIGINT" />
        <result column="color" property="color" jdbcType="VARCHAR" />
        <result column="color_name" property="colorName" jdbcType="VARCHAR" />
        <result column="size" property="size" jdbcType="VARCHAR" />
        <result column="size_name" property="sizeName" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="qty" property="qty" jdbcType="INTEGER" />
        <result column="discount_blue" property="discountBlue" jdbcType="DECIMAL" />
        <result column="discount_red" property="discountRed" jdbcType="DECIMAL" />
        <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
        <result column="pay_method" property="payMethod" jdbcType="VARCHAR" />
        <result column="pay_method_type" property="payMethodType" jdbcType="VARCHAR" />
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
        <result column="uid" property="uid" jdbcType="BIGINT" />
        <result column="delivery_name" property="deliveryName" jdbcType="VARCHAR" />
        <result column="delivery_address" property="deliveryAddress" jdbcType="VARCHAR" />
        <result column="delivery_phone" property="deliveryPhone" jdbcType="VARCHAR" />
        <result column="delivery_amount" property="deliveryAmount" jdbcType="DECIMAL" />
        <result column="delivery_company" property="deliveryCompany" jdbcType="VARCHAR" />
        <result column="delivery_no" property="deliveryNo" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="comment_star" property="commentStar" jdbcType="DECIMAL" />
        <result column="comment_remark" property="commentRemark" jdbcType="VARCHAR" />
        <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <!-- 更新商品订单收货状态 -->
    <update id="updateStateByDate">
    	UPDATE app_product_order SET state=3 WHERE state=2 AND SUBSTRING(CAST(create_time AS CHAR),1,10) &lt;= #{date} 
    </update>
    
    <!-- 更新订单状态 -->
    <update id="updateStateByIds">
    	UPDATE app_product_order SET discount_blue=0,discount_red=0 WHERE id IN 
    	<foreach collection="ids" item="item" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </update>
    
    <!-- 获取订单列表 -->
    <select id="getProductOrderList" resultType="java.util.Map">
    	SELECT o.id,p.logo_path AS logoPath,p.item_name AS itemName,p.item_remark AS itemRemark,
		o.price,o.qty,o.pay_amount AS payAmount,FLOOR(o.comment_star) AS commentStar,
		(CASE WHEN o.comment_time IS NULL THEN 0 ELSE 1 END) AS isComment
		FROM app_product_order o 
		INNER JOIN app_product p ON p.id=o.product_id
		WHERE o.uid=#{param.uid} AND o.state=#{param.state}
		ORDER BY o.id DESC
		LIMIT #{page},#{rows}
    </select>
    
    <!-- 获取订单详情 -->
    <select id="findDetailById" resultType="java.util.Map">
	    SELECT p.id AS productId,p.logo_path AS logoPath,p.item_name AS itemName,p.item_remark AS itemRemark,
		FLOOR(s.value*o.pay_amount*0.01) AS blueCurrency,o.id,o.order_no AS orderNo,o.color,o.size,o.price,
		o.qty,o.discount_blue AS discountBlue,o.discount_red AS discountRed,o.pay_amount AS payAmount,
		o.pay_method AS payMethod,CAST(o.pay_time as char) AS payTime,o.uid,o.delivery_name AS deliveryName,
		o.delivery_address AS deliveryAddress,o.delivery_phone AS deliveryPhone,o.delivery_amount AS deliveryAmount,
		o.delivery_company AS deliveryCompany,o.delivery_no AS deliveryNo,o.state,o.comment_star AS commentStar,
		o.comment_remark AS commentRemark,o.comment_time AS commentTime
		FROM app_product_order o 
		INNER JOIN app_product p ON p.id=o.product_id
		LEFT JOIN sys_setting s ON s.id='cur_percent'
		WHERE o.id=#{id}
    </select>
    
    <!-- 商品评价列表 -->
    <select id="getProductCommtentList" resultType="java.util.Map">
    	SELECT u.real_name AS realName,u.nick_name AS nickName,u.logo_path AS logoPath,FLOOR(o.comment_star) AS commentStar,
		o.comment_remark AS commentRemark,SUBSTRING(CAST(o.comment_time AS CHAR),1,16) AS commentTime
		FROM app_product_order o 
		LEFT JOIN sys_user u ON u.id=o.uid 
		WHERE o.product_id=#{productId} AND o.comment_time IS NOT NULL 
		order by o.comment_star desc 
		LIMIT #{page},#{rows}
    </select>
    
    <sql id="Base_Column_List" >
        <!--  自动生成 2016年12月19日 表字段名称 -->
        id, order_no, product_id, color, color_name, size, size_name, price, qty, discount_blue, discount_red, 
        pay_amount, pay_method, pay_method_type, pay_time, uid, delivery_name, delivery_address, 
        delivery_phone, delivery_amount, delivery_company, delivery_no, state, comment_star, 
        comment_remark, comment_time, create_time
    </sql>
    
    <sql id="findByPageSql" >
        <!-- WARNING -  自动生成 2016-12-19  分页查询SQL -->
        select a.* from app_product_order a
        <where >
            <if test="param.id != null " >
                and a.id = #{param.id,jdbcType=BIGINT}
            </if>
            <if test="param.orderNo != null " >
                and a.order_no = #{param.orderNo,jdbcType=VARCHAR}
            </if>
            <if test="param.productId != null " >
                and a.product_id = #{param.productId,jdbcType=BIGINT}
            </if>
            <if test="param.color != null" >
                and a.color = #{param.color,jdbcType=VARCHAR}
            </if>
            <if test="param.size != null" >
                and a.size = #{param.size,jdbcType=VARCHAR}
            </if>
            <if test="param.colorName != null" >
                and a.color_name = #{param.colorName,jdbcType=VARCHAR}
            </if>
            <if test="param.sizeName != null" >
                and a.size_name = #{param.sizeName,jdbcType=VARCHAR}
            </if>
            <if test="param.price != null " >
                and a.price = #{param.price,jdbcType=DECIMAL}
            </if>
            <if test="param.qty != null " >
                and a.qty = #{param.qty,jdbcType=INTEGER}
            </if>
            <if test="param.discountBlue != null " >
                and a.discount_blue = #{param.discountBlue,jdbcType=DECIMAL}
            </if>
            <if test="param.discountRed != null " >
                and a.discount_red = #{param.discountRed,jdbcType=DECIMAL}
            </if>
            <if test="param.payAmount != null " >
                and a.pay_amount = #{param.payAmount,jdbcType=DECIMAL}
            </if>
            <if test="param.payMethod != null and param.payMethod != ''" >
                and a.pay_method = #{param.payMethod,jdbcType=VARCHAR}
            </if>
            <if test="param.payMethodType != null and param.payMethodType != ''" >
                and a.pay_method_type = #{param.payMethodType,jdbcType=VARCHAR}
            </if>
            <if test="param.payTime != null " >
                and a.pay_time = #{param.payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="param.uid != null " >
                and a.uid = #{param.uid,jdbcType=BIGINT}
            </if>
            <if test="param.deliveryName != null and param.deliveryName != ''" >
                and a.delivery_name = #{param.deliveryName,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryAddress != null and param.deliveryAddress != ''" >
                and a.delivery_address = #{param.deliveryAddress,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryPhone != null and param.deliveryPhone != ''" >
                and a.delivery_phone = #{param.deliveryPhone,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryAmount != null " >
                and a.delivery_amount = #{param.deliveryAmount,jdbcType=DECIMAL}
            </if>
            <if test="param.deliveryCompany != null and param.deliveryCompany != ''" >
                and a.delivery_company = #{param.deliveryCompany,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryNo != null and param.deliveryNo != ''" >
                and a.delivery_no = #{param.deliveryNo,jdbcType=VARCHAR}
            </if>
            <if test="param.state != null " >
                and a.state = #{param.state,jdbcType=INTEGER}
            </if>
            <if test="param.commentStar != null " >
                and a.comment_star = #{param.commentStar,jdbcType=DECIMAL}
            </if>
            <if test="param.commentRemark != null and param.commentRemark != ''" >
                and a.comment_remark = #{param.commentRemark,jdbcType=VARCHAR}
            </if>
            <if test="param.commentTime != null " >
                and a.comment_time = #{param.commentTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by a.id desc
    </sql>
    
    <select id="findByPage" resultMap="BaseResultMap" >
        <!-- WARNING -  自动生成 2016-12-19  分页查询 -->
        select temp.* from (
        <include refid="findByPageSql" />
        ) temp limit #{offset}, #{pageSize}
    </select>
    
    <select id="findByPageCount" resultType="java.lang.Integer" >
        <!-- WARNING -  自动生成 2016-12-19  分页查询总条数 -->
        select count(1) from (
        <include refid="findByPageSql" />
        ) temp 
    </select>
    
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--  自动生成 2016年12月19日 根据ID查询 -->
        select 
        <include refid="Base_Column_List" />
        from app_product_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="load" resultMap="BaseResultMap" >
        <!-- WARNING -  自动生成 2016-12-19  根据多个ID查询 -->
        select 
        <include refid="Base_Column_List" />
        from app_product_order where id in 
        <foreach collection="ids" item="item" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </select>
    
    <select id="all" resultMap="BaseResultMap" >
        <!-- WARNING -  自动生成 2016-12-19  查询所有 -->
        select 
        <include refid="Base_Column_List" />
        from app_product_order
    </select>
    
    <select id="count" resultType="java.lang.Integer" >
        <!-- WARNING -  自动生成 2016-12-19 查询总条数 -->
        select count(1) from app_product_order
    </select>
    
    <update id="update" parameterType="com.kapphk.web.bean.product.BeanAppProductOrder" >
        <!--  自动生成 2016年12月19日 更新数据 -->
        update app_product_order
        <set >
            <if test="orderNo != null" >
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productId != null" >
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="color != null" >
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="size != null" >
                size = #{size,jdbcType=VARCHAR},
            </if>
            <if test="colorName != null" >
                color_name = #{colorName,jdbcType=VARCHAR},
            </if>
            <if test="sizeName != null" >
                size_name = #{sizeName,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="qty != null" >
                qty = #{qty,jdbcType=INTEGER},
            </if>
            <if test="discountBlue != null" >
                discount_blue = #{discountBlue,jdbcType=DECIMAL},
            </if>
            <if test="discountRed != null" >
                discount_red = #{discountRed,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null" >
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="payMethod != null" >
                pay_method = #{payMethod,jdbcType=VARCHAR},
            </if>
            <if test="payMethodType != null" >
                pay_method_type = #{payMethodType,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null" >
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null" >
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="deliveryName != null" >
                delivery_name = #{deliveryName,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAddress != null" >
                delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
            </if>
            <if test="deliveryPhone != null" >
                delivery_phone = #{deliveryPhone,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAmount != null" >
                delivery_amount = #{deliveryAmount,jdbcType=DECIMAL},
            </if>
            <if test="deliveryCompany != null" >
                delivery_company = #{deliveryCompany,jdbcType=VARCHAR},
            </if>
            <if test="deliveryNo != null" >
                delivery_no = #{deliveryNo,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="commentStar != null" >
                comment_star = #{commentStar,jdbcType=DECIMAL},
            </if>
            <if test="commentRemark != null" >
                comment_remark = #{commentRemark,jdbcType=VARCHAR},
            </if>
            <if test="commentTime != null" >
                comment_time = #{commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByOrderNo" parameterType="com.kapphk.web.bean.product.BeanAppProductOrder" >
        <!--  自动生成 2016年12月19日 更新数据 -->
        update app_product_order
        <set >
            <if test="productId != null" >
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="color != null" >
                color = #{color,jdbcType=VARCHAR},
            </if>
            <if test="size != null" >
                size = #{size,jdbcType=VARCHAR},
            </if>
            <if test="colorName != null" >
                color_name,
            </if>
            <if test="sizeName != null" >
                size_name,
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="qty != null" >
                qty = #{qty,jdbcType=INTEGER},
            </if>
            <if test="discountBlue != null" >
                discount_blue = #{discountBlue,jdbcType=DECIMAL},
            </if>
            <if test="discountRed != null" >
                discount_red = #{discountRed,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null" >
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="payMethod != null" >
                pay_method = #{payMethod,jdbcType=VARCHAR},
            </if>
            <if test="payMethodType != null" >
                pay_method_type = #{payMethodType,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null" >
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null" >
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="deliveryName != null" >
                delivery_name = #{deliveryName,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAddress != null" >
                delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
            </if>
            <if test="deliveryPhone != null" >
                delivery_phone = #{deliveryPhone,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAmount != null" >
                delivery_amount = #{deliveryAmount,jdbcType=DECIMAL},
            </if>
            <if test="deliveryCompany != null" >
                delivery_company = #{deliveryCompany,jdbcType=VARCHAR},
            </if>
            <if test="deliveryNo != null" >
                delivery_no = #{deliveryNo,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="commentStar != null" >
                comment_star = #{commentStar,jdbcType=DECIMAL},
            </if>
            <if test="commentRemark != null" >
                comment_remark = #{commentRemark,jdbcType=VARCHAR},
            </if>
            <if test="commentTime != null" >
                comment_time = #{commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where order_no = #{orderNo,jdbcType=VARCHAR}
    </update>


    <insert id="insert" parameterType="com.kapphk.web.bean.product.BeanAppProductOrder" useGeneratedKeys="true" keyProperty="id" >
        <!--  自动生成 2016年12月19日 添加数据 -->
        insert into app_product_order
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null" >
                order_no,
            </if>
            <if test="productId != null" >
                product_id,
            </if>
            <if test="color != null" >
                color,
            </if>
            <if test="size != null" >
                size,
            </if>
            <if test="colorName != null" >
                #{colorName,jdbcType=VARCHAR},
            </if>
            <if test="sizeName != null" >
                #{sizeName,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="qty != null" >
                qty,
            </if>
            <if test="discountBlue != null" >
                discount_blue,
            </if>
            <if test="discountRed != null" >
                discount_red,
            </if>
            <if test="payAmount != null" >
                pay_amount,
            </if>
            <if test="payMethod != null" >
                pay_method,
            </if>
            <if test="payMethodType != null" >
                pay_method_type,
            </if>
            <if test="payTime != null" >
                pay_time,
            </if>
            <if test="uid != null" >
                uid,
            </if>
            <if test="deliveryName != null" >
                delivery_name,
            </if>
            <if test="deliveryAddress != null" >
                delivery_address,
            </if>
            <if test="deliveryPhone != null" >
                delivery_phone,
            </if>
            <if test="deliveryAmount != null" >
                delivery_amount,
            </if>
            <if test="deliveryCompany != null" >
                delivery_company,
            </if>
            <if test="deliveryNo != null" >
                delivery_no,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="commentStar != null" >
                comment_star,
            </if>
            <if test="commentRemark != null" >
                comment_remark,
            </if>
            <if test="commentTime != null" >
                comment_time,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null" >
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productId != null" >
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="color != null" >
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="size != null" >
                #{size,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="qty != null" >
                #{qty,jdbcType=INTEGER},
            </if>
            <if test="discountBlue != null" >
                #{discountBlue,jdbcType=DECIMAL},
            </if>
            <if test="discountRed != null" >
                #{discountRed,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null" >
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="payMethod != null" >
                #{payMethod,jdbcType=VARCHAR},
            </if>
            <if test="payMethodType != null" >
                #{payMethodType,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null" >
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null" >
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="deliveryName != null" >
                #{deliveryName,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAddress != null" >
                #{deliveryAddress,jdbcType=VARCHAR},
            </if>
            <if test="deliveryPhone != null" >
                #{deliveryPhone,jdbcType=VARCHAR},
            </if>
            <if test="deliveryAmount != null" >
                #{deliveryAmount,jdbcType=DECIMAL},
            </if>
            <if test="deliveryCompany != null" >
                #{deliveryCompany,jdbcType=VARCHAR},
            </if>
            <if test="deliveryNo != null" >
                #{deliveryNo,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                #{state,jdbcType=INTEGER},
            </if>
            <if test="commentStar != null" >
                #{commentStar,jdbcType=DECIMAL},
            </if>
            <if test="commentRemark != null" >
                #{commentRemark,jdbcType=VARCHAR},
            </if>
            <if test="commentTime != null" >
                #{commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    
    <insert id="inserts" parameterType="java.util.List" >
        <!-- WARNING -  自动生成 2016-12-19 添加多条数据 -->
        insert into app_product_order (order_no, product_id, color, size, color_name, size_name, price, qty, discount_blue, discount_red, pay_amount, pay_method, pay_method_type, pay_time, uid, delivery_name, delivery_address, delivery_phone, delivery_amount, delivery_company, delivery_no, state, comment_star, comment_remark, comment_time, create_time)
        values
        <foreach collection="list" item="item" separator="," >
            (#{item.orderNo,jdbcType=VARCHAR}, #{item.productId,jdbcType=BIGINT}, #{item.color,jdbcType=VARCHAR}, #{item.size,jdbcType=VARCHAR}, #{item.colorName,jdbcType=VARCHAR}, #{item.sizeName,jdbcType=VARCHAR}, #{item.price,jdbcType=DECIMAL}, #{item.qty,jdbcType=INTEGER}, #{item.discountBlue,jdbcType=DECIMAL}, #{item.discountRed,jdbcType=DECIMAL}, #{item.payAmount,jdbcType=DECIMAL}, #{item.payMethod,jdbcType=VARCHAR}, #{item.payMethodType,jdbcType=VARCHAR}, #{item.payTime,jdbcType=TIMESTAMP}, #{item.uid,jdbcType=BIGINT}, #{item.deliveryName,jdbcType=VARCHAR}, #{item.deliveryAddress,jdbcType=VARCHAR}, #{item.deliveryPhone,jdbcType=VARCHAR}, #{item.deliveryAmount,jdbcType=DECIMAL}, #{item.deliveryCompany,jdbcType=VARCHAR}, #{item.deliveryNo,jdbcType=VARCHAR}, #{item.state,jdbcType=INTEGER}, #{item.commentStar,jdbcType=DECIMAL}, #{item.commentRemark,jdbcType=VARCHAR}, #{item.commentTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    
    <delete id="delete" parameterType="java.lang.Long" >
        <!--  自动生成 2016年12月19日 删除数据 -->
        delete from app_product_order
        where id = #{id,jdbcType=BIGINT}
    </delete>
    
    <delete id="deletes" >
        <!-- WARNING -  自动生成 2016-12-19 删除多条数据 -->
        delete from app_product_order where id in 
        <foreach collection="ids" item="item" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </delete>
    
    <delete id="deleteByEntity" >
        <!-- WARNING -  自动生成 2016-12-19 通过实体类中的条件删除数据 -->
        delete from app_product_order
        <where >
            <if test="param.id != null " >
                and id = #{param.id,jdbcType=BIGINT}
            </if>
            <if test="param.orderNo != null " >
                and order_no = #{param.orderNo,jdbcType=VARCHAR}
            </if>
            <if test="param.productId != null " >
                and product_id = #{param.productId,jdbcType=BIGINT}
            </if>
            <if test="param.color != null" >
                and color = #{param.color,jdbcType=VARCHAR}
            </if>
            <if test="param.size != null" >
                and size = #{param.size,jdbcType=VARCHAR}
            </if>
             <if test="param.colorName != null" >
                and color_name = #{param.colorName,jdbcType=VARCHAR}
            </if>
            <if test="param.sizeName != null" >
                and size_name = #{param.sizeName,jdbcType=VARCHAR}
            </if>
            <if test="param.price != null " >
                and price = #{param.price,jdbcType=DECIMAL}
            </if>
            <if test="param.qty != null " >
                and qty = #{param.qty,jdbcType=INTEGER}
            </if>
            <if test="param.discountBlue != null " >
                and discount_blue = #{param.discountBlue,jdbcType=DECIMAL}
            </if>
            <if test="param.discountRed != null " >
                and discount_red = #{param.discountRed,jdbcType=DECIMAL}
            </if>
            <if test="param.payAmount != null " >
                and pay_amount = #{param.payAmount,jdbcType=DECIMAL}
            </if>
            <if test="param.payMethod != null and param.payMethod != ''" >
                and pay_method = #{param.payMethod,jdbcType=VARCHAR}
            </if>
            <if test="param.payMethodType != null and param.payMethodType != ''" >
                and pay_method_type = #{param.payMethodType,jdbcType=VARCHAR}
            </if>
            <if test="param.payTime != null " >
                and pay_time = #{param.payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="param.uid != null " >
                and uid = #{param.uid,jdbcType=BIGINT}
            </if>
            <if test="param.deliveryName != null and param.deliveryName != ''" >
                and delivery_name = #{param.deliveryName,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryAddress != null and param.deliveryAddress != ''" >
                and delivery_address = #{param.deliveryAddress,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryPhone != null and param.deliveryPhone != ''" >
                and delivery_phone = #{param.deliveryPhone,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryAmount != null " >
                and delivery_amount = #{param.deliveryAmount,jdbcType=DECIMAL}
            </if>
            <if test="param.deliveryCompany != null and param.deliveryCompany != ''" >
                and delivery_company = #{param.deliveryCompany,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryNo != null and param.deliveryNo != ''" >
                and delivery_no = #{param.deliveryNo,jdbcType=VARCHAR}
            </if>
            <if test="param.state != null " >
                and state = #{param.state,jdbcType=INTEGER}
            </if>
            <if test="param.commentStar != null " >
                and comment_star = #{param.commentStar,jdbcType=DECIMAL}
            </if>
            <if test="param.commentRemark != null and param.commentRemark != ''" >
                and comment_remark = #{param.commentRemark,jdbcType=VARCHAR}
            </if>
            <if test="param.commentTime != null " >
                and comment_time = #{param.commentTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </delete>
    
    <select id="findAll" resultMap="BaseResultMap" >
        <!-- WARNING -  自动生成 2016-12-19  通过实体中的条件查询所有 -->
        select temp.* from (
        <include refid="findByPageSql" />
        ) temp 
    </select>

    <select id="findListByParam" resultType="java.util.Map">
        SELECT
        temp.*
        FROM
        (SELECT
        po.`id`,
        po.`order_no` AS orderNo,
        po.`state`,
        (SELECT p.item_remark FROM app_product p WHERE p.id =po.`product_id`) AS itemRemark,
        po.`price`,
        po.`color`,
        po.`size`,
        po.`qty`,
        po.`discount_blue` AS discountBlue,
        po.`discount_red` AS discountRed,
        po.`pay_amount` AS payAmount,
        po.`pay_method` AS payMethod,
        DATE_FORMAT (po.`pay_time`,'%Y-%m-%d %H:%i:%s')AS payTime,
        po.`delivery_amount` AS deliveryAmount,
        po.`delivery_name` AS deliveryName,
        po.`delivery_no` AS deliveryNo,
        po.`delivery_address` AS deliveryAddress,
        po.`comment_star` AS commentStar,
        po.`comment_remark` AS commentRemark,
        DATE_FORMAT (po.`comment_time`,'%Y-%m-%d %H:%i:%s')AS commentTime,
        u.`id` AS uid,
        u.`user_name` AS userName,
        u.`real_name` AS realName
        FROM app_product_order po LEFT JOIN sys_user u ON po.`uid`=u.`id`)temp
        <where>
            <if test="param.orderNo !=null and param.orderNo !='' ">
                 orderNo = #{param.orderNo,jdbcType=VARCHAR}
            </if>
            <if test="param.deliveryName !=null and param.deliveryName !='' ">
                and  deliveryName like concat('%',#{param.deliveryName,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.itemRemark !=null and param.itemRemark !='' ">
                and  itemRemark like concat('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.state !=null and param.state !='' ">
                and  state = #{param.state,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY payTime DESC
        <if test="page !=null ">
            limit #{page,jdbcType=INTEGER},
        </if>
        <if test="page !=null ">
            #{rows,jdbcType=INTEGER}
        </if>



    </select>



    <select id="findListByParamCount" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        (SELECT
        po.`id`,
        po.`order_no` AS orderNo,
        po.`state`,
        (SELECT p.item_remark FROM app_product p WHERE p.id =po.`product_id`) AS itemRemark,
        po.`price`,
        po.`color`,
        po.`size`,
        po.`qty`,
        po.`discount_blue` AS discountBlue,
        po.`discount_red` AS discountRed,
        po.`pay_amount` AS payAmount,
        po.`pay_method` AS payMethod,
        po.`pay_time` AS payTime,
        po.`delivery_amount` AS deliveryAmount,
        po.`delivery_name` AS deliveryName,
        po.`delivery_no` AS deliveryNo,
        po.`delivery_address` AS deliveryAddress,
        u.`id` AS uid,
        u.`user_name` AS userName,
        u.`real_name` AS realName
        FROM app_product_order po LEFT JOIN sys_user u ON po.`uid`=u.`id`)temp
        <where>
            <if test="param.orderNo !=null and param.orderNo !='' ">
                 orderNo = #{param.orderNo}
            </if>
            <if test="param.deliveryName !=null and param.deliveryName !='' ">
                and  deliveryName like concat('%',#{param.deliveryName,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.itemRemark !=null and param.itemRemark !='' ">
                and  itemRemark like concat('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.state !=null and param.state !='' ">
                and  state = #{param.state,jdbcType=INTEGER}
            </if>
        </where>

    </select>

    <select id="findListByParamExcel" resultType="java.util.Map">
        SELECT
        temp.*
        FROM
        (SELECT
        po.`id`,
        po.`order_no` AS orderNo,
        (CASE WHEN po.`state`=0 THEN "待支付"
        WHEN po.`state`=1 THEN "待发货"
        WHEN po.`state`=2 THEN "待收货"
        WHEN po.`state`=3 THEN "已完成"  END ) AS state,
        po.state AS state2,
        (SELECT p.item_remark FROM app_product p WHERE p.id =po.`product_id`) AS itemRemark,
        po.`price`,
        po.`color`,
        po.`size`,
        po.`qty`,
        po.`discount_blue` AS discountBlue,
        po.`discount_red` AS discountRed,
        CAST((CASE WHEN po.`discount_blue`=0 AND po.`discount_red`>0
        THEN CONCAT("使用",po.`discount_red`,"红币,抵扣",po.`discount_red`,"元")
        WHEN po.`discount_blue` >0 AND po.`discount_red`=0
        THEN CONCAT("使用",po.`discount_blue`,"蓝币,抵扣",po.`discount_blue`,"元")
        WHEN po.`discount_blue` >0 AND po.`discount_red`>0
        THEN CONCAT("使用",po.`discount_red`,"红币,",po.`discount_blue`,"蓝币"," 抵扣", (po.`discount_red`+po.`discount_blue`),"元")  END ) AS CHAR(500)) AS discount,
        po.`pay_amount` AS payAmount,
        po.`pay_method` AS payMethod,
        DATE_FORMAT (po.`pay_time`,'%Y-%m-%d %H:%i:%s')AS payTime,
        po.`delivery_amount` AS deliveryAmount,
        CAST(CONCAT("快递",po.`delivery_amount`,"元")AS CHAR(50)) AS deliveryMethod,
        po.`delivery_name` AS deliveryName,
        po.`delivery_no` AS deliveryNo,
        po.`delivery_address` AS deliveryAddress,
        po.`comment_star` AS commentStar,
        po.`comment_remark` AS commentRemark,
        DATE_FORMAT (po.`comment_time`,'%Y-%m-%d %H:%i:%s')AS commentTime,
        u.`id` AS uid,
        u.`user_name` AS userName,
        u.`real_name` AS realName
        FROM app_product_order po LEFT JOIN sys_user u ON po.`uid`=u.`id`)temp
        <where>
            <if test="param.orderNo !=null and param.orderNo !='' ">
                 orderNo like concat('%',#{param.orderNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.deliveryName !=null and param.deliveryName !='' ">
                and  deliveryName like concat('%',#{param.deliveryName,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.itemRemark !=null and param.itemRemark !='' ">
                and  itemRemark like concat('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.state !=null ">
                and  state2 = #{param.state,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY payTime DESC
        <if test="page !=null ">
            limit #{page,jdbcType=INTEGER},
        </if>
        <if test=" page !=null and rows !=null ">
            #{rows,jdbcType=INTEGER}
        </if>
    </select>

    <select id="findListByParamExcelCount" resultType="java.lang.Integer">
        select count(1) from
            (SELECT
        temp.*
        FROM
        (SELECT
        po.`id`,
        po.`order_no` AS orderNo,
        (CASE WHEN po.`state`=0 THEN "待支付"
        WHEN po.`state`=1 THEN "待发货"
        WHEN po.`state`=2 THEN "待收货"
        WHEN po.`state`=3 THEN "已完成"  END ) AS state,
        po.state AS state2,
        (SELECT p.item_remark FROM app_product p WHERE p.id =po.`product_id`) AS itemRemark,
        po.`price`,
        po.`color`,
        po.`size`,
        po.`qty`,
        po.`discount_blue` AS discountBlue,
        po.`discount_red` AS discountRed,
        CAST((CASE WHEN po.`discount_blue`=0 AND po.`discount_red`>0
        THEN CONCAT("使用",po.`discount_red`,"红币,抵扣",po.`discount_red`,"元")
        WHEN po.`discount_blue` >0 AND po.`discount_red`=0
        THEN CONCAT("使用",po.`discount_blue`,"蓝币,抵扣",po.`discount_blue`,"元")
        WHEN po.`discount_blue` >0 AND po.`discount_red`>0
        THEN CONCAT("使用",po.`discount_red`,"红币,",po.`discount_blue`,"蓝币"," 抵扣", (po.`discount_red`+po.`discount_blue`),"元")  END ) AS CHAR(500)) AS discount,
        po.`pay_amount` AS payAmount,
        po.`pay_method` AS payMethod,
        DATE_FORMAT (po.`pay_time`,'%Y-%m-%d %H:%i:%s')AS payTime,
        po.`delivery_amount` AS deliveryAmount,
        CAST(CONCAT("快递",po.`delivery_amount`,"元")AS CHAR(50)) AS deliveryMethod,
        po.`delivery_name` AS deliveryName,
        po.`delivery_no` AS deliveryNo,
        po.`delivery_address` AS deliveryAddress,
        po.`comment_star` AS commentStar,
        po.`comment_remark` AS commentRemark,
        DATE_FORMAT (po.`comment_time`,'%Y-%m-%d %H:%i:%s')AS commentTime,
        u.`id` AS uid,
        u.`user_name` AS userName,
        u.`real_name` AS realName
        FROM app_product_order po LEFT JOIN sys_user u ON po.`uid`=u.`id`)temp
        <where>
            <if test="param.orderNo !=null and param.orderNo !='' ">
                orderNo like concat('%',#{param.orderNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.deliveryName !=null and param.deliveryName !='' ">
                and  deliveryName like concat('%',#{param.deliveryName,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.itemRemark !=null and param.itemRemark !='' ">
                and  itemRemark like concat('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.state !=null ">
                and  state2=#{param.state,jdbcType=INTEGER}
            </if>
        </where>)temp2
    </select>

    <select id="findSellChartByParam" resultType="java.util.Map">
        SELECT po.product_id,
        (p.`item_name`) AS itemRemark,
        SUM(po.qty) AS totalProductQty,
        ROUND(SUM(po.`price`* po.qty),2)AS estimatePayAmount,
        SUM(po.`discount_blue`) AS totalDiscountBlue,
        SUM(po.`discount_red`) AS totalDiscountRed,
        ROUND(SUM(po.`pay_amount`),2) AS totalPayAmount,
        DATE_FORMAT(po.`create_time`,'%Y-%m-%d') AS create_time
        FROM app_product_order AS po
        LEFT OUTER JOIN app_product AS p ON p.`id` = po.`product_id`
        <where>
            <if test="param.itemRemark !=null and param.itemRemark!='' ">
                COALESCE(p.`item_name`) LIKE CONCAT('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.startTime !=null and param.startTime !='' ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') >=#{param.startTime,jdbcType=TIMESTAMP}]]>
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') <=#{param.endTime,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="param.startTime==null and param.endTime==null ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') <=DATE_FORMAT(now(),'%Y-%m-%d') ]]>
            </if>
        </where>
        GROUP BY
        po.`product_id`,DATE_FORMAT(po.`create_time`,'%Y-%m-%d')
        ORDER BY DATE_FORMAT(po.`create_time`,'%Y-%m-%d') DESC
        <if test="page !=null ">
            limit #{page,jdbcType=INTEGER},
        </if>
        <if test="rows !=null ">
             #{rows,jdbcType=INTEGER}
        </if>
    </select>

    <select id="findSellChartByParamCount" resultType="java.lang.Integer">
        SELECT count(1)
        FROM
        (SELECT po.product_id,
        (p.`item_name`) AS itemRemark,
        SUM(po.qty) AS totalProductQty,
        ROUND(SUM(po.`price`* po.qty),2)AS estimatePayAmount,
        SUM(po.`discount_blue`) AS totalDiscountBlue,
        SUM(po.`discount_red`) AS totalDiscountRed,
        ROUND(SUM(po.`pay_amount`),2) AS totalPayAmount,
        DATE_FORMAT(po.`create_time`,'%Y-%m-%d') AS create_time
        FROM app_product_order AS po
        LEFT OUTER JOIN app_product AS p ON p.`id` = po.`product_id`
        <where>
            <if test="param.itemRemark !=null and param.itemRemark!='' ">
                COALESCE(p.`item_name`) LIKE CONCAT('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.startTime !=null and param.startTime !='' ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') >=#{param.startTime,jdbcType=TIMESTAMP}]]>
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') <=#{param.endTime,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="param.startTime==null and param.endTime==null ">
                <![CDATA[ and DATE_FORMAT(po.`create_time`,'%Y-%m-%d') <=DATE_FORMAT(now(),'%Y-%m-%d') ]]>
            </if>
        </where>
        GROUP BY
        po.`product_id`,DATE_FORMAT(po.`create_time`,'%Y-%m-%d')) temp
    </select>

    <select id="findProductSellChartByParam" resultType="java.util.Map" >
        SELECT
        (u.user_name) AS userName,
        (u.real_name) AS realName,
        (SELECT GROUP_CONCAT(l1.tag_identity) FROM user_identity AS l1 WHERE l1.uid=po.uid AND l1.tag_type NOT IN('身份','个人身份')) AS userIdentity,
        (p.item_name) AS productName,
        SUM(po.product_id) AS totalProductQty,
        MAX(po.create_time) AS createTime
        FROM
        app_product_order AS po
        LEFT OUTER JOIN app_product AS p ON p.id = po.product_id
        LEFT OUTER JOIN sys_user AS u ON u.id=po.uid
        <where>
            <if test="param.queryName !=null and param.queryName!='' ">
                (u.user_name LIKE CONCAT('%',#{param.queryName,jdbcType=VARCHAR},'%')
                OR u.real_name LIKE CONCAT('%',#{param.queryName,jdbcType=VARCHAR},'%'))
            </if>
            <if test="param.startTime !=null and param.startTime !='' ">
                 and po.`create_time` &gt;=#{param.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                and po.`create_time` &lt;=#{param.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        GROUP BY
        po.`uid`,
        po.product_id
        ORDER BY
        po.uid ASC,
        po.`product_id` ASC
        <if test="page !=null ">
            limit #{page,jdbcType=INTEGER},
        </if>
        <if test="rows !=null ">
            #{rows,jdbcType=INTEGER}
        </if>

    </select>

    <select id="findProductSellChartByParamCount" resultType="java.lang.Integer">
      SELECT count(1) FROM
      (SELECT
        (u.user_name) AS userName,
        (u.real_name) AS realName,
        (SELECT GROUP_CONCAT(l1.tag_identity) FROM user_identity AS l1 WHERE l1.uid=po.uid AND l1.tag_type NOT IN('身份','个人身份')) AS userIdentity,
        (p.item_name) AS productName,
        SUM(po.product_id) AS totalProductQty,
        MAX(po.create_time) AS createTime
        FROM
        app_product_order AS po
        LEFT OUTER JOIN app_product AS p ON p.id = po.product_id
        LEFT OUTER JOIN sys_user AS u ON u.id=po.uid
        <where>
            <if test="param.queryName !=null and param.queryName!='' ">
                (u.user_name LIKE CONCAT('%',#{param.queryName,jdbcType=VARCHAR},'%')
                OR u.real_name LIKE CONCAT('%',#{param.queryName,jdbcType=VARCHAR},'%'))
            </if>
            <if test="param.startTime !=null and param.startTime !='' ">
                and po.`create_time` &gt;=#{param.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                and po.`create_time` &lt;=#{param.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        GROUP BY
        po.`uid`,
        po.product_id
        ORDER BY
        po.uid ASC,
        po.`product_id` ASC) temp
    </select>

    <select id="findProductInventoryChartByParam" resultType="java.util.Map">
        SELECT
        temp.*,
        temp.month_sales_qty*price AS estimatePayAmount,
        temp.last_month_qty+temp.this_month_qty-month_sales_qty AS current_month_qty
        FROM
        (
        SELECT
        DATE_FORMAT(pin.create_time,'%Y%m') AS ym,
        (p.`item_name`) AS item_name,
        CONCAT(pin.`color`,pin.`size`) AS property,
        ROUND(AVG(pin.`price`),2) AS price,
        COALESCE((SELECT
        SUM(l1.stock_qty)
        FROM
        app_product_inventory AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` &lt; DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00')
            </if>
        </where>
        ),0)
        - COALESCE((SELECT
        SUM(l1.qty)
        FROM
        app_product_order AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` &lt; DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00')
            </if>
            AND l1.state > 0
        </where>
        ),0)
        AS last_month_qty,
        COALESCE((SELECT
        SUM(l1.stock_qty)
        FROM
        app_product_inventory AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` BETWEEN DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00') AND DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-%d 23:59:59')
            </if>
        </where>
        ),0) AS this_month_qty,
        COALESCE(po.qty,0) AS month_sales_qty,
        COALESCE(po.discount_red,0) AS month_discount_red,
        COALESCE(po.discount_blue,0) AS month_discount_blue,
        COALESCE(po.pay_amount,0) AS month_pay_amount,
        (CASE WHEN MAX(pin.create_time) >= MAX(p.create_time) THEN MAX(pin.create_time) ELSE MAX(p.create_time) END) AS update_time
        FROM
        app_product_inventory AS pin
        LEFT OUTER JOIN app_product AS p ON pin.product_id = p.id
        LEFT OUTER JOIN (
        SELECT l1.product_id,l1.color,l1.size ,
        SUM(l1.qty) AS qty,
        SUM(l1.discount_red) AS discount_red,
        SUM(l1.discount_blue) AS discount_blue,
        SUM(l1.pay_amount) AS pay_amount
        FROM app_product_order AS l1
        <where>
            <if test="param.endTime !=null and param.endTime !='' ">
                l1.`create_time` BETWEEN DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00') AND DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-%d 23:59:59')
            </if>
            AND l1.state > 0
        </where>
        GROUP BY
        l1.product_id,l1.color,l1.size
        ) AS po ON  po.product_id=pin.product_id   AND po.color = pin.`color`   AND po.size=pin.`size`
        <where>
            <if test="param.itemRemark!=null and param.itemRemark !='' ">
                p.item_name LIKE CONCAT('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                AND pin.create_time &lt;= #{param.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        GROUP BY
        DATE_FORMAT(pin.create_time,'%Y%m'),
        pin.`product_id`,
        pin.`color`,
        pin.`size`
        <if test="param.endTime !=null and param.endTime !='' ">
            HAVING
            ym &gt;= DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y%m')
        </if>
        ORDER BY
        DATE_FORMAT(pin.create_time,'%Y%m'),
        pin.`product_id`,
        pin.`color`,
        pin.`size`
        <if test="page !=null ">
            limit #{page,jdbcType=INTEGER},
        </if>
        <if test="rows !=null ">
            #{rows,jdbcType=INTEGER}
        </if>)temp
    </select>

    <select id="findProductInventoryChartByParamCount" resultType="java.lang.Integer" >
        SELECT count(1)
        FROM (SELECT
        temp.*,
        temp.month_sales_qty*price AS estimatePayAmount,
        temp.last_month_qty+temp.this_month_qty-month_sales_qty AS current_month_qty
        FROM
        (
        SELECT
        DATE_FORMAT(pin.create_time,'%Y%m') AS ym,
        (p.`item_name`) AS item_name,
        CONCAT(pin.`color`,pin.`size`) AS property,
        ROUND(AVG(pin.`price`),2) AS price,
        COALESCE((SELECT
        SUM(l1.stock_qty)
        FROM
        app_product_inventory AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` &lt; DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00')
            </if>
        </where>
        ),0)
        - COALESCE((SELECT
        SUM(l1.qty)
        FROM
        app_product_order AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` &lt; DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00')
            </if>
            AND l1.state > 0
        </where>
        ),0)
        AS last_month_qty,
        COALESCE((SELECT
        SUM(l1.stock_qty)
        FROM
        app_product_inventory AS l1
        <where>
            l1.product_id=pin.product_id
            AND l1.color = pin.`color`
            AND l1.size=pin.`size`
            <if test="param.endTime !=null and param.endTime !='' ">
                AND l1.`create_time` BETWEEN DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00') AND DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-%d 23:59:59')
            </if>
        </where>
        ),0) AS this_month_qty,
        COALESCE(po.qty,0) AS month_sales_qty,
        COALESCE(po.discount_red,0) AS month_discount_red,
        COALESCE(po.discount_blue,0) AS month_discount_blue,
        COALESCE(po.pay_amount,0) AS month_pay_amount,
        (CASE WHEN MAX(pin.create_time) >= MAX(p.create_time) THEN MAX(pin.create_time) ELSE MAX(p.create_time) END) AS update_time
        FROM
        app_product_inventory AS pin
        LEFT OUTER JOIN app_product AS p ON pin.product_id = p.id
        LEFT OUTER JOIN (
        SELECT l1.product_id,l1.color,l1.size ,
        SUM(l1.qty) AS qty,
        SUM(l1.discount_red) AS discount_red,
        SUM(l1.discount_blue) AS discount_blue,
        SUM(l1.pay_amount) AS pay_amount
        FROM app_product_order AS l1
        <where>
            <if test="param.endTime !=null and param.endTime !='' ">
                l1.`create_time` BETWEEN DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-01 00:00:00') AND DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y-%m-%d 23:59:59')
            </if>
            AND l1.state > 0
        </where>
        GROUP BY
        l1.product_id,l1.color,l1.size
        ) AS po ON  po.product_id=pin.product_id   AND po.color = pin.`color`   AND po.size=pin.`size`
        <where>
            <if test="param.itemRemark!=null and param.itemRemark !='' ">
                p.item_name LIKE CONCAT('%',#{param.itemRemark,jdbcType=VARCHAR},'%')
            </if>
            <if test="param.endTime !=null and param.endTime !='' ">
                AND pin.create_time &lt;= #{param.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        GROUP BY
        DATE_FORMAT(pin.create_time,'%Y%m'),
        pin.`product_id`,
        pin.`color`,
        pin.`size`
        <if test="param.endTime !=null and param.endTime !='' ">
            HAVING
            ym &gt;= DATE_FORMAT(#{param.endTime,jdbcType=TIMESTAMP},'%Y%m')
        </if>
        ORDER BY
        DATE_FORMAT(pin.create_time,'%Y%m'),
        pin.`product_id`,
        pin.`color`,
        pin.`size`)temp)temp2
    </select>
</mapper>